name: ZenPacks.fednot.Delivery

zProperties:
  zSpringBootPort:
    category: SpringBoot
    type: int
    default: 8134
  zSpringBootURI:
    category: SpringBoot
    type: string
    default: 'sprint-boot-admin_v1/api/applications'
  zIVGroups:
    category: SpringBoot
    type: string
  zIVUser:
    category: SpringBoot
    type: string

class_relationships:
  - SpringBootDevice 1:MC SpringBootApplication
  - SpringBootApplication 1:MC SpringBootComponent
  - SpringBootApplication 1:MC SpringBootJob
  - SpringBootApplication 1:MC SpringBootZip
  - SpringBootApplication 1:MC SpringBootOrder
  - SpringBootApplication 1:MC SpringBootJVM

event_classes:
  /Status/App/Delivery:
    remove: false
  /Status/App/Delivery/Job:
    remove: false
    transform: "if int(float(evt.current)) == 0:\n    msg = 'Junction {}: OK'.format(evt.component)\n\
      if int(float(evt.current)) == 1:\n    msg = 'Junction {}: failure '.format(evt.component)\n\
      elif int(float(evt.current)) == 2:\n    msg = 'Junction {}: major failure'.format(evt.component)\n\
      \nevt.message = msg\nevt.summary = msg"
    transform: |+
      import time
      import datetime

      if 'missing' in evt.eventKey:
          value = int(float(evt.current))
          if value > 1:
              msg = 'Job {} - {} messages missing'.format(component.name(), value)
          else:
              msg = 'Job {} - {} message missing'.format(component.name(), value)
          evt.summary = msg
          evt.message = msg
      elif 'job_age' in evt.eventKey:

          '''
          'barcodeJob':             Runs once an hour between 18:00 and 00:00
          'depositJob':              Runs once an hour between 11:00 and 12:00
          'jmsNotificationJob':   Runs every 5 minutes
          'uploadZipJob':          Runs at hour and 10 and 30 minutes
          'validationJob':           Runs at hour and 0, 25 and 45 minutes
          '''

          # The following should be closer to cron format, and code should be handle more complex syntax
          job_map = {
                             'barcodeJob': [18, 0, 65],           # running period start, end, max_value during running period
                             'depositJob': [11, 12, 65],
                             'jmsNotificationJob': [0, 24, 10],
                             'uploadZipJob': [0, 24, 45],
                             'validationJob': [0, 24, 30],
                             }

          current_time = datetime.datetime.now()
          current_hour = current_time.hour
          current_minute = current_time.minute
          component_name = component.name()
          age = int(round(float(evt.current), 0))
          job_name = component_name.split()[0]

          job_specs = job_map[job_name]
          run_start_hour = job_specs[0]
          run_stop_hour = job_specs[1]
          run_threshold = job_specs[2]

          if run_stop_hour < run_start_hour:
              if current_hour < run_start_hour:
                  run_start_hour = 0
              elif current_hour >= run_start_hour:
                  run_stop_hour = 24

          if run_start_hour <= current_hour < run_stop_hour:
              # Within running period for jobs
              pass
          else:
                 # Jobs aren't running anymore
                 if current_hour < run_start_hour:
                     run_threshold = (current_hour - run_stop_hour +24) * 60 + current_minute + 5
                 elif current_hour >= run_stop_hour:
                     run_threshold = (current_hour - run_stop_hour) * 60 + current_minute + 5

          if age < run_threshold:
             evt.severity = 0
          else:
             evt.severity = 5

          msg = '{} - Job is {} minutes old - {}'.format(component_name, age, run_threshold)
          evt.summary = msg
          evt.message = msg

  /Status/App/Delivery/Order/:
    remove: False
    transform: |+
      if 'order_validation_error' in evt.eventKey:
          value = float(evt.current)
          component_name = component.name()
          msg = '{} - There are {} validation errors'.format(component_name, int(value))
          evt.message = msg
          evt.summary = msg
      elif 'order_missing_validation' in evt.eventKey:
          value = float(evt.current)
          component_name = component.name()
          msg = '{} - There are {} validations missing'.format(component_name, int(value))
          evt.message = msg
          evt.summary = msg
      elif 'order_missing_barcode' in evt.eventKey:
          value = float(evt.current)
          component_name = component.name()
          msg = '{} - There are {} barcodes missing'.format(component_name, int(value))
          evt.message = msg
          evt.summary = msg
      elif 'order_missing_deposit' in evt.eventKey:
          value = float(evt.current)
          component_name = component.name()
          msg = '{} - There are {} deposits missing'.format(component_name, int(value))
          evt.message = msg
          evt.summary = msg


classes:
  SpringBootDevice:
    base: [zenpacklib.Device]
    label: SpringBoot Device
    properties:
      get_SBAApplications:
        grid_display: false
        api_only: true
        api_backendtype: method

  SpringBootApplication:
    base: [zenpacklib.Component]
    label: Application
    meta_type: SpringBootApplication
    monitoring_templates: [SpringBootApplication]
    properties:
      DEFAULTS:
        grid_display: false
      status:
        label: Status
        type: string
        datapoint: health_status
        renderer: Zenoss.render.severity
        grid_display: true
        label_width: 40
      applicationID:
        label: applicationID
        grid_display: false
        label_width: 100
      applicationName:
        label: applicationName
        grid_display: false
        label_width: 100
      applicationNameID:
        label: applicationNameID
        grid_display: false
        label_width: 100
      applicationComponentID:
        label: applicationComponentID
        grid_display: false
        label_width: 100
      componentName:
        label: componentName
        grid_display: false
        label_width: 30
      mgmtURL:
        label: Management URL
        grid_display: false
      healthURL:
        label: Health URL
        grid_display: false
      serviceURL:
        label: Service URL
        grid_display: false
      hostingServer:
        label: Hosting Server
        grid_display: false
    relationships:
      DEFAULTS:
        grid_display: false
      springBootZips:
        grid_display: false

  SpringBootComponent:
    base: [zenpacklib.Component]
    label: Delivery Component
    monitoring_templates: [SpringBootComponent]
    properties:
      DEFAULTS:
        grid_display: false
      status:
        label: Status
        type: string
        datapoint: health_status
        renderer: Zenoss.render.severity
        grid_display: true
        label_width: 40
      componentName:
        label: componentName
        grid_display: false
        label_width: 30
    relationships:
      DEFAULTS:
        grid_display: false
      springBootApplication:
        content_width: 100
        grid_display: true

  SpringBootJob:
    base: [zenpacklib.Component]
    label: Delivery Job
    monitoring_templates: [SpringBootJob]
    properties:
      DEFAULTS:
        grid_display: false
      jobName:
        label: Job Name
        grid_display: true
      status:
        label: Status
        type: string
        datapoint: job_status
        renderer: Zenoss.render.severity
        grid_display: true
        label_width: 40

  SpringBootZip:
    base: [zenpacklib.Component]
    label: Delivery Zip
    monitoring_templates: [SpringBootZip]
    properties:
      DEFAULTS:
        grid_display: false
      zipName:
        label: Zip Name
      status:
        label: Status
        type: string
        datapoint: job_zip_status
        renderer: Zenoss.render.severity
        grid_display: true
        label_width: 40
      dataCount:
        label: Data Count
        type: int
        datapoint: job_dataCount
        grid_display: true
      missingCount:
        label: Missing Count
        type: int
        datapoint: job_missingCount
        grid_display: true

  SpringBootOrder:
    base: [zenpacklib.Component]
    label: Delivery Order
    monitoring_templates: [SpringBootOrder]
    properties:
      DEFAULTS:
        grid_display: false

  SpringBootJVM:
    base: [zenpacklib.Component]
    label: Delivery JVM
    monitoring_templates: [SpringBootJVM]
    properties:
      DEFAULTS:
        grid_display: false

device_classes:
  /Server/Linux/Applications:
    zProperties:
      zPythonClass: ZenPacks.fednot.Delivery.SpringBootDevice
      zCollectorPlugins:
        - fednot.json.SBA
        - fednot.json.Delivery
      zDeviceTemplates:
        - Device
      # TODO : Add more templates

    templates:
      SpringBootApplication:
        targetPythonClass: ZenPacks.fednot.Delivery.SpringBootApplication
        datasources:
          health:
            type: Python
            plugin_classname: ZenPacks.fednot.Delivery.dsplugins.health.Health
            datapoints:
              status:
                rrdtype: GAUGE

      SpringBootComponent:
        targetPythonClass: ZenPacks.fednot.Delivery.SpringBootComponent
        datasources:
          health:
            type: Python
            plugin_classname: ZenPacks.fednot.Delivery.dsplugins.health.Health
            datapoints:
              status:
                rrdtype: GAUGE

      SpringBootJob:
        targetPythonClass: ZenPacks.fednot.Delivery.SpringBootJob
        datasources:
          job:
            type: Python
            plugin_classname: ZenPacks.fednot.Delivery.dsplugins.jobs.Jobs
            datapoints:
              status:
                rrdtype: GAUGE
              age:
                rrdtype: GAUGE
              dataCount:
                rrdtype: GAUGE
                createCmd: 'RRA:AVERAGE:0.5:1:600
                  RRA:AVERAGE:0.5:6:600
                  RRA:AVERAGE:0.5:24:600
                  RRA:AVERAGE:0.5:288:600
                  RRA:MAX:0.5:6:600
                  RRA:MAX:0.5:24:600
                  RRA:MAX:0.5:288:600
                  RRA:LAST:0.5:1:600
                  RRA:LAST:0.5:6:600
                  RRA:LAST:0.5:24:600
                  RRA:LAST:0.5:288:600'
              missingCount:
                rrdtype: GAUGE
                createCmd: 'RRA:AVERAGE:0.5:1:600
                  RRA:AVERAGE:0.5:6:600
                  RRA:AVERAGE:0.5:24:600
                  RRA:AVERAGE:0.5:288:600
                  RRA:MAX:0.5:6:600
                  RRA:MAX:0.5:24:600
                  RRA:MAX:0.5:288:600
                  RRA:LAST:0.5:1:600
                  RRA:LAST:0.5:6:600
                  RRA:LAST:0.5:24:600
                  RRA:LAST:0.5:288:600'
        thresholds:
          missing:
            dsnames: [job_missingCount]
            eventClass: /Status/App/Delivery/Job
            severity: 5
            maxval: 0.1
          age:
            dsnames: [job_age]
            eventClass: /Status/App/Delivery/Job
            severity: 5
            maxval: 0.1
        graphs:
          Messages Counts:
            units: messages
            width: 1000
            miny: 0
            graphpoints:
              Data Count:
                dpName: job_dataCount
                cFunc: LAST
              Missing Count:
                dpName: job_missingCount
                cFunc: LAST
          Job Age:
            units: minutes
            width: 1000
            miny: 0
            graphpoints:
              age:
                dpName: job_age

      SpringBootZip:
        targetPythonClass: ZenPacks.fednot.Delivery.SpringBootZip
        datasources:
          job:
            type: Python
            plugin_classname: ZenPacks.fednot.Delivery.dsplugins.jobs.Zips
            datapoints:
              zip_status:
                rrdtype: GAUGE
              dataCount:
                rrdtype: GAUGE
                createCmd: 'RRA:AVERAGE:0.5:1:600
                  RRA:AVERAGE:0.5:6:600
                  RRA:AVERAGE:0.5:24:600
                  RRA:AVERAGE:0.5:288:600
                  RRA:MAX:0.5:6:600
                  RRA:MAX:0.5:24:600
                  RRA:MAX:0.5:288:600
                  RRA:LAST:0.5:1:600
                  RRA:LAST:0.5:6:600
                  RRA:LAST:0.5:24:600
                  RRA:LAST:0.5:288:600'
              missingCount:
                rrdtype: GAUGE
                createCmd: 'RRA:AVERAGE:0.5:1:600
                  RRA:AVERAGE:0.5:6:600
                  RRA:AVERAGE:0.5:24:600
                  RRA:AVERAGE:0.5:288:600
                  RRA:MAX:0.5:6:600
                  RRA:MAX:0.5:24:600
                  RRA:MAX:0.5:288:600
                  RRA:LAST:0.5:1:600
                  RRA:LAST:0.5:6:600
                  RRA:LAST:0.5:24:600
                  RRA:LAST:0.5:288:600'
        graphs:
          Messages:
            units: messages
            width: 1000
            miny: 0
            graphpoints:
              Data Count:
                dpName: job_dataCount
                cFunc: LAST
              Missing Count:
                dpName: job_missingCount
                cFunc: LAST

      SpringBootOrder:
        targetPythonClass: ZenPacks.fednot.Delivery.SpringBootOrder
        datasources:
          order:
            type: Python
            plugin_classname: ZenPacks.fednot.Delivery.dsplugins.orders.Orders
            datapoints:
              barcode_received:
                rrdtype: DERIVE
                createCmd: 'RRA:AVERAGE:0.5:1:600
                  RRA:AVERAGE:0.5:6:600
                  RRA:AVERAGE:0.5:24:600
                  RRA:AVERAGE:0.5:288:600
                  RRA:MAX:0.5:6:600
                  RRA:MAX:0.5:24:600
                  RRA:MAX:0.5:288:600
                  RRA:LAST:0.5:1:600
                  RRA:LAST:0.5:6:600
                  RRA:LAST:0.5:24:600
                  RRA:LAST:0.5:288:600'
              deposit_received:
                rrdtype: DERIVE
                createCmd: 'RRA:AVERAGE:0.5:1:600
                  RRA:AVERAGE:0.5:6:600
                  RRA:AVERAGE:0.5:24:600
                  RRA:AVERAGE:0.5:288:600
                  RRA:MAX:0.5:6:600
                  RRA:MAX:0.5:24:600
                  RRA:MAX:0.5:288:600
                  RRA:LAST:0.5:1:600
                  RRA:LAST:0.5:6:600
                  RRA:LAST:0.5:24:600
                  RRA:LAST:0.5:288:600'
              missing_barcode:
                rrdtype: GAUGE
                createCmd: 'RRA:AVERAGE:0.5:1:600
                  RRA:AVERAGE:0.5:6:600
                  RRA:AVERAGE:0.5:24:600
                  RRA:AVERAGE:0.5:288:600
                  RRA:MAX:0.5:6:600
                  RRA:MAX:0.5:24:600
                  RRA:MAX:0.5:288:600
                  RRA:LAST:0.5:1:600
                  RRA:LAST:0.5:6:600
                  RRA:LAST:0.5:24:600
                  RRA:LAST:0.5:288:600'
              missing_deposit:
                rrdtype: GAUGE
                createCmd: 'RRA:AVERAGE:0.5:1:600
                  RRA:AVERAGE:0.5:6:600
                  RRA:AVERAGE:0.5:24:600
                  RRA:AVERAGE:0.5:288:600
                  RRA:MAX:0.5:6:600
                  RRA:MAX:0.5:24:600
                  RRA:MAX:0.5:288:600
                  RRA:LAST:0.5:1:600
                  RRA:LAST:0.5:6:600
                  RRA:LAST:0.5:24:600
                  RRA:LAST:0.5:288:600'
              missing_validation:
                rrdtype: GAUGE
                createCmd: 'RRA:AVERAGE:0.5:1:600
                  RRA:AVERAGE:0.5:6:600
                  RRA:AVERAGE:0.5:24:600
                  RRA:AVERAGE:0.5:288:600
                  RRA:MAX:0.5:6:600
                  RRA:MAX:0.5:24:600
                  RRA:MAX:0.5:288:600
                  RRA:LAST:0.5:1:600
                  RRA:LAST:0.5:6:600
                  RRA:LAST:0.5:24:600
                  RRA:LAST:0.5:288:600'
              new:
                rrdtype: DERIVE
                createCmd: 'RRA:AVERAGE:0.5:1:600
                  RRA:AVERAGE:0.5:6:600
                  RRA:AVERAGE:0.5:24:600
                  RRA:AVERAGE:0.5:288:600
                  RRA:MAX:0.5:6:600
                  RRA:MAX:0.5:24:600
                  RRA:MAX:0.5:288:600
                  RRA:LAST:0.5:1:600
                  RRA:LAST:0.5:6:600
                  RRA:LAST:0.5:24:600
                  RRA:LAST:0.5:288:600'
              resent:
                rrdtype: DERIVE
                createCmd: 'RRA:AVERAGE:0.5:1:600
                  RRA:AVERAGE:0.5:6:600
                  RRA:AVERAGE:0.5:24:600
                  RRA:AVERAGE:0.5:288:600
                  RRA:MAX:0.5:6:600
                  RRA:MAX:0.5:24:600
                  RRA:MAX:0.5:288:600
                  RRA:LAST:0.5:1:600
                  RRA:LAST:0.5:6:600
                  RRA:LAST:0.5:24:600
                  RRA:LAST:0.5:288:600'
              total:
                rrdtype: GAUGE
                createCmd: 'RRA:AVERAGE:0.5:1:600
                  RRA:AVERAGE:0.5:6:600
                  RRA:AVERAGE:0.5:24:600
                  RRA:AVERAGE:0.5:288:600
                  RRA:MAX:0.5:6:600
                  RRA:MAX:0.5:24:600
                  RRA:MAX:0.5:288:600
                  RRA:LAST:0.5:1:600
                  RRA:LAST:0.5:6:600
                  RRA:LAST:0.5:24:600
                  RRA:LAST:0.5:288:600'
              total_check:
                rrdtype: GAUGE
                createCmd: 'RRA:AVERAGE:0.5:1:600
                  RRA:AVERAGE:0.5:6:600
                  RRA:AVERAGE:0.5:24:600
                  RRA:AVERAGE:0.5:288:600
                  RRA:MAX:0.5:6:600
                  RRA:MAX:0.5:24:600
                  RRA:MAX:0.5:288:600
                  RRA:LAST:0.5:1:600
                  RRA:LAST:0.5:6:600
                  RRA:LAST:0.5:24:600
                  RRA:LAST:0.5:288:600'
              uploaded:
                rrdtype: DERIVE
                createCmd: 'RRA:AVERAGE:0.5:1:600
                  RRA:AVERAGE:0.5:6:600
                  RRA:AVERAGE:0.5:24:600
                  RRA:AVERAGE:0.5:288:600
                  RRA:MAX:0.5:6:600
                  RRA:MAX:0.5:24:600
                  RRA:MAX:0.5:288:600
                  RRA:LAST:0.5:1:600
                  RRA:LAST:0.5:6:600
                  RRA:LAST:0.5:24:600
                  RRA:LAST:0.5:288:600'
              validation_error:
                rrdtype: GAUGE
                createCmd: 'RRA:AVERAGE:0.5:1:600
                  RRA:AVERAGE:0.5:6:600
                  RRA:AVERAGE:0.5:24:600
                  RRA:AVERAGE:0.5:288:600
                  RRA:MAX:0.5:6:600
                  RRA:MAX:0.5:24:600
                  RRA:MAX:0.5:288:600
                  RRA:LAST:0.5:1:600
                  RRA:LAST:0.5:6:600
                  RRA:LAST:0.5:24:600
                  RRA:LAST:0.5:288:600'
              validation_received:
                rrdtype: DERIVE
                createCmd: 'RRA:AVERAGE:0.5:1:600
                  RRA:AVERAGE:0.5:6:600
                  RRA:AVERAGE:0.5:24:600
                  RRA:AVERAGE:0.5:288:600
                  RRA:MAX:0.5:6:600
                  RRA:MAX:0.5:24:600
                  RRA:MAX:0.5:288:600
                  RRA:LAST:0.5:1:600
                  RRA:LAST:0.5:6:600
                  RRA:LAST:0.5:24:600
                  RRA:LAST:0.5:288:600'
        thresholds:
          missing_barcode:
            dsnames: [order_missing_barcode]
            eventClass: /Status/App/Delivery/Order
            severity: CRITICAL
            maxval: 0.1
          missing_deposit:
            dsnames: [order_missing_deposit]
            eventClass: /Status/App/Delivery/Order
            severity: CRITICAL
            maxval: 0.1
          missing_validation:
            dsnames: [order_missing_validation]
            eventClass: /Status/App/Delivery/Order
            severity: CRITICAL
            maxval: 0.1
          validation_error:
            dsnames: [order_validation_error]
            eventClass: /Status/App/Delivery/Order
            severity: CRITICAL
            maxval: 0.1
        graphs:
          Received:
            units: messages
            width: 1000
            miny: 0
            graphpoints:
              Barcode received:
                dpName: order_barcode_received
                cFunc: LAST
              Deposit received:
                dpName: order_deposit_received
                cFunc: LAST
              Validation received:
                dpName: order_validation_received
                cFunc: LAST
              New:
                dpName: order_new
                cFunc: LAST
              Resent:
                dpName: order_resent
                cFunc: LAST
              Uploaded:
                dpName: order_uploaded
                cFunc: LAST
          Missing:
            units: messages
            width: 1000
            miny: 0
            graphpoints:
              Barcode missing:
                dpName: order_missing_barcode
                cFunc: LAST
              Deposit missing:
                dpName: order_missing_deposit
                cFunc: LAST
              Validation missing:
                dpName: order_missing_validation
                cFunc: LAST
          Errors:
            units: messages
            width: 1000
            miny: 0
            graphpoints:
              Validation error:
                dpName: order_validation_error
                cFunc: LAST
          Totals:
            units: messages
            width: 1000
            miny: 0
            graphpoints:
              Total:
                dpName: order_total
                cFunc: LAST
              Total Check:
                dpName: order_total_check
                cFunc: LAST

      SpringBootJVM:
        targetPythonClass: ZenPacks.fednot.Delivery.SpringBootJVM
        datasources:
          jvm:
            type: Python
            plugin_classname: ZenPacks.fednot.Delivery.dsplugins.jvm.JVM
            datapoints:
              classes:
                rrdtype: GAUGE
              classes.loaded:
                rrdtype: GAUGE
              classes.unloaded:
                rrdtype: GAUGE
              classes_loaded_total:
                rrdtype: GAUGE
              mem:
                rrdtype: GAUGE
              mem.free:
                rrdtype: GAUGE
              mem.used:
                rrdtype: GAUGE
              mem.used_percentage:
                rrdtype: GAUGE
              heap.committed:
                rrdtype: GAUGE
              heap.used:
                rrdtype: GAUGE
              heap.used_percentage:
                rrdtype: GAUGE
              heap:
                rrdtype: GAUGE
              systemload.average:
                rrdtype: GAUGE
              threads:
                rrdtype: GAUGE
        thresholds:
          heap_memory:
            dsnames: [jvm_heap.used_percentage]
            eventClass: /Status/App
            severity: ERROR
            maxval: 90
        graphs:
          Classes:
            units: classes
            width: 1000
            miny: 0
            graphpoints:
              Classes:
                dpName: jvm_classes
              Classes Loaded:
                dpName: jvm_classes.loaded
              Classes Unloaded:
                dpName: jvm_classes.unloaded
          Memory:
            units: bytes
            width: 1000
            miny: 0
            base: True
            # TODO: Colors of graphpoints
            graphpoints:
              Memory:
                dpName: jvm_mem
                lineType: AREA
              Memory Used:
                dpName: jvm_mem.used
                lineType: AREA
          Memory Percentage:
            units: percent
            width: 1000
            miny: 0
            maxy: 100
            # TODO: Colors of graphpoints
            graphpoints:
              Memory Used Percentage:
                dpName: jvm_mem.used_percentage
                lineType: AREA
          Heap Memory:
            units: bytes
            width: 1000
            miny: 0
            base: True
            graphpoints:
              Heap Committed:
                dpName: jvm_heap.committed
                lineType: AREA
              Heap:
                dpName: jvm_heap
              Heap Used:
                dpName: jvm_heap.used
                lineType: AREA
          Heap Memory Percentage:
            units: percent
            width: 1000
            miny: 0
            maxy: 100
            graphpoints:
              Heap Used Percentage:
                dpName: jvm_heap.used_percentage
                lineType: AREA
          Load:
            units: percent
            width: 1000
            miny: 0
            graphpoints:
              System Load:
                dpName: jvm_systemload.average
                lineType: AREA
          Threads:
            units: threads
            width: 1000
            miny: 0
            graphpoints:
              Threads:
                dpName: jvm_threads
